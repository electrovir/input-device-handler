(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function n(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=n(s);fetch(s.href,i)}})();var c=(e=>(e.NewDevicesAdded="new-devices-added",e.AllDevicesUpdated="all-devices-updated",e.CurrentInputsChanged="current-inputs-updated",e.DevicesRemoved="devices-removed",e))(c||{});function g(e){return!!e}const j={capitalizeFirstLetter:!1};function V(e){return e.length?e[0].toUpperCase()+e.slice(1):""}function F(e,t){return t.capitalizeFirstLetter?V(e):e}function z(e,t=j){const n=e.toLowerCase();if(!n.length)return"";const r=n.replace(/^-+/,"").replace(/-{2,}/g,"-").replace(/-(?:.|$)/g,s=>{const i=s[1];return i?i.toUpperCase():""});return F(r,t)}var E;(function(e){e.Upper="upper",e.Lower="lower"})(E||(E={}));var L;(function(e){e.FirstThenWait="first-then-wait",e.AfterWait="after-wait"})(L||(L={}));const q=[(e,t)=>t in e,(e,t)=>t in e.constructor.prototype];function f(e,t){return e?q.some(n=>{try{return n(e,t)}catch{return!1}}):!1}function B(e){return e?e instanceof Error?e.message:f(e,"message")?String(e.message):String(e):""}function J(e){return e instanceof Error?e:new Error(B(e))}function _(e){return Array.isArray(e)?"array":typeof e}function U(e,t){return _(e)===t}function C(e){return!!e&&typeof e=="object"}function p(e){let t;try{t=Reflect.ownKeys(e)}catch{}return t??[...Object.keys(e),...Object.getOwnPropertySymbols(e)]}function w(e){return p(e).map(t=>e[t])}function G(e){return Object.fromEntries(e)}function T({source:e,whitespace:t,errorHandler:n}){try{return JSON.stringify(e,void 0,t)}catch(r){if(n)return n(r);throw r}}const K="Failed to compare objects using JSON.stringify";function x(e,t,n){return T({source:e,errorHandler(r){if(n)return"";throw r}})===T({source:t,errorHandler(r){if(n)return"";throw r}})}function S(e,t,n={}){try{return e===t?!0:C(e)&&C(t)?x(Object.keys(e).sort(),Object.keys(t).sort(),!!(n!=null&&n.ignoreNonSerializableProperties))?Object.keys(e).every(s=>S(e[s],t[s])):!1:x(e,t,!!(n!=null&&n.ignoreNonSerializableProperties))}catch(r){const s=J(r);throw s.message.startsWith(K)||(s.message=`${K}: ${s.message}`),s}}function $(e){return p(e).filter(t=>isNaN(Number(t)))}function W(e){return $(e).map(n=>e[n])}function H(e,t){let n=!1;const r=p(e).reduce((s,i)=>{const a=t(i,e[i],e);return a instanceof Promise&&(n=!0),{...s,[i]:a}},{});return n?new Promise(async(s,i)=>{try{await Promise.all(p(r).map(async a=>{const o=await r[a];r[a]=o})),s(r)}catch(a){i(a)}}):r}var u=(e=>(e.Keyboard="keyboard",e.Mouse="mouse",e.Gamepad="gamepad",e))(u||{});const k={gamepad1:0,gamepad2:1,gamepad3:2,gamepad4:3};function Z(e){return Object.values(k).includes(e)}const X={mouse:"mouse",keyboard:"keyboard"},d={...X,...k};u.Gamepad,u.Gamepad,u.Gamepad,u.Gamepad,u.Keyboard,u.Mouse;var N=(e=>(e.Button="button",e.Axe="axe",e))(N||{});function l(e){return`button-${e}`}function I(e){return`axe-${e}`}const Y=.01;function Q({value:e,gamepadDeadZone:t,globalDeadZone:n}){const r=t??(n||Y);return Math.abs(e)>r?e:0}function M({gamepadInput:e,inputIndex:t,deadZones:n,globalDeadZone:r}){const s=U(e,"number"),i=s?I(t):l(t),a=s?e:e.value;return{inputName:i,value:Q({value:a,gamepadDeadZone:n[i],globalDeadZone:r}),inputType:s?N.Axe:N.Button}}function ee({gamepad:e,deadZoneSettings:t,globalDeadZone:n}){if(!Z(e.index))throw new Error(`Tried to serialize gamepad with out-of-bounds index: '${e.index}'`);const r=t[e.id]||{},s=e.axes.map((o,m)=>M({gamepadInput:o,inputIndex:m,deadZones:r,globalDeadZone:n})),i=e.buttons.map((o,m)=>M({deadZones:r,gamepadInput:o,globalDeadZone:n,inputIndex:m})),a=G([...i,...s].map(o=>[o.inputName,o]));return{axes:s,buttons:i,isConnected:e.connected,gamepadName:e.id,index:e.index,mapping:e.mapping,serialized:!0,timestamp:e.timestamp,inputsByName:a}}const v=window.navigator;function te({deadZoneSettings:e,globalDeadZone:t}){return Array.from(f(v,"webkitGetGamepads")?v.webkitGetGamepads():f(v,"getGamepads")?v.getGamepads():[]).filter(n=>!!n).map(n=>ee({gamepad:n,deadZoneSettings:e,globalDeadZone:t}))}function ne({deadZoneSettings:e,globalDeadZone:t}){return te({deadZoneSettings:e,globalDeadZone:t}).reduce((s,i)=>{const a=i.index;return Z(a)?(s[a]=i,s):(console.warn(`ignoring gamepad index '${a}'`),s)},{})}function re(e){const t={},n={deviceKey:e.index,deviceName:e.gamepadName,deviceType:u.Gamepad};return Object.values(e.inputsByName).forEach((r,s)=>{if(r.value){const i=l(s);t[i]={...n,details:r,inputName:i,inputValue:r.value}}}),t}function se(e){return H(e,(t,n)=>({currentInputs:re(n),deviceDetails:n,deviceName:n.gamepadName,deviceKey:n.index,deviceType:u.Gamepad}))}function O(e){return w(e).map(r=>r==null?void 0:r.currentInputs).filter(g).map(r=>w(r)).flat()}const A={deviceDetails:void 0,deviceKey:d.keyboard,deviceName:"keyboard",deviceType:u.Keyboard},y={deviceDetails:void 0,deviceKey:d.mouse,deviceName:"mouse",deviceType:u.Mouse};var ie=globalThis&&globalThis.__setFunctionName||function(e,t,n){return typeof t=="symbol"&&(t=t.description?"[".concat(t.description,"]"):""),Object.defineProperty(e,"name",{configurable:!0,value:n?"".concat(n," ",t):t})};function ae(){return class extends Event{constructor(t,n){super(t,n),this.detail=n.detail}}}const oe=globalThis.CustomEvent||ae();function ue(){return e=>{var t;return t=class extends oe{constructor(r){super(e,r)}},ie(t,"TypedEventConstructor"),t.type=e,t}}globalThis&&globalThis.__setFunctionName;function h(){return(e,t)=>{var n;const r=z(e,{capitalizeFirstLetter:!0}),s=(n=class extends ue()(e){constructor(){super(...arguments),this.eventType=e}static constructIfDataIsNew(i,...a){const o=s.getNewData(...a);if(o)return new s({detail:{timestamp:i,inputs:o}})}},n.getNewData=t,n);return Object.defineProperty(s,"name",{value:r,writable:!0}),s}}function ce(...[e,t]){return t}const de=h()(c.AllDevicesUpdated,ce);function P(e,t){return e.deviceKey===t.deviceKey&&e.inputName===t.inputName&&e.inputName===t.inputName&&e.inputValue===t.inputValue}function le(...[e,t]){const n=O(t),r=e?O(e):[];if(!S(r,n)){const s=n.filter(a=>!r.find(o=>P(o,a))),i=r.filter(a=>!n.find(o=>P(o,a)));return{newInputs:s,removedInputs:i,allCurrentInputs:n}}}const pe=h()(c.CurrentInputsChanged,le);function fe(...[e,t]){if(!e)return[];const n=p(e).filter(r=>!f(t,r));if(n.length)return n.map(r=>e[r]).filter(g)}const me=h()(c.DevicesRemoved,fe);function ve(...[e,t]){if(!e)return w(t).filter(g);const n=p(t).filter(r=>!f(e,r));if(n.length)return n.map(r=>t[r]).filter(g)}const ye=h()(c.NewDevicesAdded,ve),R=[de,ye,me,pe];Object.fromEntries(R.map(e=>[e.type,e]));class ge{constructor(t={}){this.currentKeyboardInputs={},this.currentMouseInputs={},this.gamepadDeadZoneSettings={},this.loopIsRunning=!1,this.globalDeadZone=0,this.currentLoopIndex=-1,this.lastEventDetails={},this.listeners=G(W(c).map(n=>[n,new Set])),t.gamepadDeadZoneSettings&&this.updateGamepadDeadZoneSettings(t.gamepadDeadZoneSettings),t.globalDeadZone&&(this.globalDeadZone=t.globalDeadZone),this.attachWindowListeners(t),this.readAllDevices(),t.startLoopImmediately&&this.startPollingLoop()}dispatchEvent(t){this.listeners[t.type].forEach(n=>n(t))}listen(t,n){return this.listeners[t].add(n),()=>{this.listeners[t].delete(n)}}attachWindowListeners(t){window.addEventListener("keydown",n=>{const r=l(n.key);if(this.currentKeyboardInputs.hasOwnProperty(r))return;const s={deviceType:u.Keyboard,details:{keyboardEvent:n},deviceKey:d.keyboard,deviceName:A.deviceName,inputName:r,inputValue:1};this.currentKeyboardInputs[r]=s}),window.addEventListener("keyup",n=>{delete this.currentKeyboardInputs[l(n.key)]}),window.addEventListener("mousedown",n=>{const r=l(n.button);this.currentMouseInputs.hasOwnProperty(r)||(this.currentMouseInputs[r]={deviceType:u.Mouse,details:{mouseEvent:n},deviceName:y.deviceName,deviceKey:d.mouse,inputName:r,inputValue:1})}),window.addEventListener("mouseup",n=>{delete this.currentMouseInputs[l(n.button)]}),t.disableMouseMovement||window.addEventListener("mousemove",n=>{const r=I("x"),s=I("y");this.currentMouseInputs[r]={deviceType:u.Mouse,details:{mouseEvent:n},deviceName:y.deviceName,deviceKey:d.mouse,inputName:r,inputValue:n.clientX},this.currentMouseInputs[s]={deviceType:u.Mouse,details:{mouseEvent:n},deviceName:y.deviceName,deviceKey:d.mouse,inputName:s,inputValue:n.clientY}})}runPollingLoop(t,n){this.loopIsRunning&&this.currentLoopIndex===t&&(this.readAllDevices(this.gamepadDeadZoneSettings,n),requestAnimationFrame(r=>{this.runPollingLoop(t,r)}))}fireEvents(t,n,r){R.forEach(s=>{const i=s.constructIfDataIsNew(t,n,r);i&&(this.lastEventDetails[i.type]={constructor:s,constructorInputs:[t,n,r]},this.dispatchEvent(i))})}getCurrentDeviceValues(t,n){const r=ne({deadZoneSettings:t,globalDeadZone:n}),s=se(r);return{[d.keyboard]:{...A,currentInputs:{...this.currentKeyboardInputs}},[d.mouse]:{...y,currentInputs:{...this.currentMouseInputs}},...s}}startPollingLoop(){this.loopIsRunning||(this.loopIsRunning=!0,this.currentLoopIndex++,requestAnimationFrame(t=>{this.runPollingLoop(this.currentLoopIndex,t)}))}pausePollingLoop(){this.loopIsRunning&&(this.loopIsRunning=!1)}getLastPollResults(){return this.lastReadInputDevices}readAllDevices(t=this.gamepadDeadZoneSettings,n=performance.now(),r=this.globalDeadZone){const s=this.getCurrentDeviceValues(t,r),i=this.lastReadInputDevices;return this.lastReadInputDevices=s,this.fireEvents(n,i,s),s}updateGamepadDeadZoneSettings(t){this.gamepadDeadZoneSettings=t}}const b=new ge({startLoopImmediately:!0}),D=window.document.getElementById("device-names");b.listen(c.CurrentInputsChanged,e=>{console.info("input changed:",e.detail.inputs)});b.listen(c.DevicesRemoved,e=>{console.info("devices removed:",e.detail.inputs),e.detail.inputs.forEach(t=>{D.innerHTML=D.innerHTML.replace(String(t.deviceName)+"<br>","")})});b.listen(c.NewDevicesAdded,e=>{console.info("new devices:",e.detail.inputs),e.detail.inputs.forEach(t=>{D.innerHTML+=String(t.deviceName)+"<br>"})});console.info({instance:b});
