(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function n(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=n(s);fetch(s.href,i)}})();var d=(e=>(e.NewDevicesAdded="new-devices-added",e.AllDevicesUpdated="all-devices-updated",e.CurrentInputsChanged="current-inputs-updated",e.DevicesRemoved="devices-removed",e))(d||{}),V=globalThis&&globalThis.__setFunctionName||function(e,t,n){return typeof t=="symbol"&&(t=t.description?"[".concat(t.description,"]"):""),Object.defineProperty(e,"name",{configurable:!0,value:n?"".concat(n," ",t):t})};function R(){return e=>{var t;return t=class extends CustomEvent{constructor(r){super(e,r)}},V(t,"TypedEventConstructor"),t.type=e,t}}globalThis&&globalThis.__setFunctionName;function z(e,t){return e.filter((n,r)=>!t.includes(r))}const F={capitalizeFirstLetter:!1};function G(e){return e.length?e[0].toUpperCase()+e.slice(1):""}function k(e,t){return t.capitalizeFirstLetter?G(e):e}function S(e,t=F){const n=e.toLowerCase();if(!n.length)return"";const r=n.replace(/^-+/,"").replace(/-{2,}/g,"-").replace(/-(?:.|$)/g,s=>{const i=s[1];return i?i.toUpperCase():""});return k(r,t)}function Z(e){return e?e instanceof Error?e.message:m(e,"message")?String(e.message):String(e):""}function q(e){return e instanceof Error?e:new Error(Z(e))}function M(e){return!!e}function b(e){return!!e&&typeof e=="object"}const J=[(e,t)=>t in e,(e,t)=>t in e.constructor.prototype];function m(e,t){return e?J.some(n=>{try{return n(e,t)}catch{return!1}}):!1}function p(e){let t;try{t=Reflect.ownKeys(e)}catch{}return t??[...Object.keys(e),...Object.getOwnPropertySymbols(e)]}function g(e){return p(e).map(t=>e[t])}function D({source:e,whitespace:t,errorHandler:n}){try{return JSON.stringify(e,void 0,t)}catch(r){if(n)return n(r);throw r}}const E="Failed to compare objects using JSON.stringify";function N(e,t,n){return D({source:e,errorHandler(r){if(n)return"";throw r}})===D({source:t,errorHandler(r){if(n)return"";throw r}})}function O(e,t,n={}){try{return e===t?!0:b(e)&&b(t)?N(Object.keys(e).sort(),Object.keys(t).sort(),!!(n!=null&&n.ignoreNonSerializableProperties))?Object.keys(e).every(s=>O(e[s],t[s])):!1:N(e,t,!!(n!=null&&n.ignoreNonSerializableProperties))}catch(r){const s=q(r);throw s.message.startsWith(E)||(s.message=`${E}: ${s.message}`),s}}function _(e,t){let n=!1;const r=p(e).reduce((s,i)=>{const o=t(i,e[i],e);return o instanceof Promise&&(n=!0),{...s,[i]:o}},{});return n?new Promise(async(s,i)=>{try{await Promise.all(p(r).map(async o=>{const u=await r[o];r[o]=u})),s(r)}catch(o){i(o)}}):r}class $ extends EventTarget{constructor(){super(...arguments),this.setupListeners=[]}getListenerCount(){return this.setupListeners.length}addEventListener(t,n,r){super.addEventListener(t,n,r),n&&this.setupListeners.push({type:t,callback:n,options:r})}dispatchEvent(t){return super.dispatchEvent(t)}removeEventListener(t,n,r){super.removeEventListener(t,n,r);const s=this.setupListeners.findIndex(i=>{if(i.type!==t)return!1;if(typeof r<"u"||typeof i.options<"u"){if(typeof r!=typeof i.options||typeof i.options=="boolean"&&typeof r=="boolean"&&r!==i.options)return!1;if(typeof i.options=="object"&&typeof r=="object"&&r.capture!==i.options.capture)return!1}return i.callback===n});this.setupListeners=z(this.setupListeners,[s])}removeAllEventListeners(){this.setupListeners.forEach(t=>{super.removeEventListener(t.type,t.callback,t.options)}),this.setupListeners=[]}}const P={gamepad1:0,gamepad2:1,gamepad3:2,gamepad4:3};function A(e){return Object.values(P).includes(e)}const H={mouse:"mouse",keyboard:"keyboard"},c={...H,...P};var a=(e=>(e.Keyboard="keyboard",e.Mouse="mouse",e.Gamepad="gamepad",e))(a||{}),w=(e=>(e.Button="button",e.Axe="axe",e))(w||{});function l(e){return`button-${e}`}function I(e){return`axe-${e}`}function B(e){return{pressed:e.pressed,touched:e.touched,value:e.value}}function U(e){if(!A(e.index))throw new Error(`Tried to serialize gamepad with out-of-bounds index: '${e.index}'`);return{axes:e.axes,buttons:e.buttons.map(B),connected:e.connected,id:e.id,index:e.index,mapping:e.mapping,serialized:!0,timestamp:e.timestamp}}function W(){return window.navigator}function X(e){const t=W();return Array.from(m(t,"webkitGetGamepads")?t.webkitGetGamepads():t.getGamepads()).filter(s=>!!s).map(s=>U(s)).reduce((s,i)=>{const o=Q(i,e),u=i.index;return A(u)?(s[u]={...i,...o},s):(console.warn(`ignoring gamepad index '${u}'`),s)},{})}function Y(e){const t={},n={deviceKey:e.index,deviceName:e.id,deviceType:a.Gamepad};return e.buttons.forEach((r,s)=>{if(r.value){const i=l(s);t[i]={...n,details:{inputType:w.Button,buttonDetails:r},inputName:i,inputValue:r.value}}}),e.axes.forEach((r,s)=>{if(r){const i=I(s);t[i]={...n,details:{inputType:w.Axe},inputName:i,inputValue:r}}}),t}const x=.01;function Q(e,t){const n=t[e.id],r=e.axes.map((i,o)=>{const u=(n==null?void 0:n.axesDeadZones[o])??x;return Math.abs(i)<u?0:i}),s=e.buttons.map((i,o)=>{const u=(n==null?void 0:n.axesDeadZones[o])??x,f=Math.abs(i.value)<u?0:i.value;return{...i,value:f}});return{axes:r,buttons:s}}function ee(e){return _(e,(t,n)=>({currentInputs:Y(n),deviceDetails:n,deviceName:n.id,deviceKey:n.index,deviceType:a.Gamepad}))}function T(e){return g(e).map(r=>r.currentInputs).map(r=>g(r)).flat()}const C={deviceDetails:void 0,deviceKey:c.keyboard,deviceName:"keyboard",deviceType:a.Keyboard},v={deviceDetails:void 0,deviceKey:c.mouse,deviceName:"mouse",deviceType:a.Mouse};function h(){return(e,t)=>{var s;const n=S(e,{capitalizeFirstLetter:!0}),r=(s=class extends R()(e){constructor(){super(...arguments),this.eventType=e}static constructIfDataIsNew(o,...u){const f=r.getNewData(...u);if(f)return new r({detail:{timestamp:o,inputs:f}})}},s.getNewData=t,s);return Object.defineProperty(r,"name",{value:n,writable:!0}),r}}function te(...[e,t]){return t}const ne=h()(d.AllDevicesUpdated,te);function K(e,t){return e.deviceKey===t.deviceKey&&e.inputName===t.inputName&&e.inputName===t.inputName&&e.inputValue===t.inputValue}function re(...[e,t]){const n=T(t),r=e?T(e):[];if(!O(r,n)){const s=n.filter(o=>!r.find(u=>K(u,o))),i=r.filter(o=>!n.find(u=>K(u,o)));return{newInputs:s,removedInputs:i,allCurrentInputs:n}}}const se=h()(d.CurrentInputsChanged,re);function ie(...[e,t]){if(!e)return[];const n=p(e).filter(r=>!m(t,r));if(n.length)return n.map(r=>e[r]).filter(M)}const oe=h()(d.DevicesRemoved,ie);function ue(...[e,t]){if(!e)return g(t);const n=p(t).filter(r=>!m(e,r));if(n.length)return n.map(r=>t[r]).filter(M)}const ae=h()(d.NewDevicesAdded,ue),j=[ne,ae,oe,se];Object.fromEntries(j.map(e=>[e.type,e]));class ce extends ${constructor(t={}){super(),this.currentKeyboardInputs={},this.currentMouseInputs={},this.gamepadDeadZoneSettings={},this.loopIsRunning=!1,this.currentLoopIndex=-1,this.lastEventDetails={},t.gamepadDeadZoneSettings&&this.updateGamepadDeadZoneSettings(t.gamepadDeadZoneSettings),this.attachWindowListeners(t),this.updateInputDevices(),t.skipLoopStart||this.startPollingLoop()}attachWindowListeners(t){window.addEventListener("keydown",n=>{const r=l(n.key);if(this.currentKeyboardInputs.hasOwnProperty(r))return;const s={deviceType:a.Keyboard,details:{keyboardEvent:n},deviceKey:c.keyboard,deviceName:C.deviceName,inputName:r,inputValue:1};this.currentKeyboardInputs[r]=s}),window.addEventListener("keyup",n=>{delete this.currentKeyboardInputs[l(n.key)]}),window.addEventListener("mousedown",n=>{const r=l(n.button);this.currentMouseInputs.hasOwnProperty(r)||(this.currentMouseInputs[r]={deviceType:a.Mouse,details:{mouseEvent:n},deviceName:v.deviceName,deviceKey:c.mouse,inputName:r,inputValue:1})}),window.addEventListener("mouseup",n=>{delete this.currentMouseInputs[l(n.button)]}),t.listenToMouseMovement&&window.addEventListener("mousemove",n=>{const r=I("x"),s=I("y");this.currentMouseInputs[r]={deviceType:a.Mouse,details:{mouseEvent:n},deviceName:v.deviceName,deviceKey:c.mouse,inputName:r,inputValue:n.clientX},this.currentMouseInputs[s]={deviceType:a.Mouse,details:{mouseEvent:n},deviceName:v.deviceName,deviceKey:c.mouse,inputName:s,inputValue:n.clientY}})}runPollingLoop(t,n){this.loopIsRunning&&this.currentLoopIndex===t&&(this.updateInputDevices(n),requestAnimationFrame(r=>{this.runPollingLoop(t,r)}))}fireEvents(t,n){j.forEach(r=>{const s=r.constructIfDataIsNew(t,this.lastReadInputDevices,n);s&&(this.lastEventDetails[s.type]={constructor:r,constructorInputs:[t,this.lastReadInputDevices,n]},this.dispatchEvent(s))})}readAllInputDevices(){const t=X(this.gamepadDeadZoneSettings),n=ee(t);return{[c.keyboard]:{...C,currentInputs:{...this.currentKeyboardInputs}},[c.mouse]:{...v,currentInputs:{...this.currentMouseInputs}},...n}}addEventListenerAndFireWithLatest(t,n,r){if(this.addEventListener(t,n,r),!n)return;const s=this.lastEventDetails[t],i=typeof n=="function"?n:n.handleEvent;if(s){const o=s.constructor.constructIfDataIsNew(...s.constructorInputs);if(!o)throw new Error(`Got input device event constructor args for event type '${t}' but the constructor did not produce an event.`);i(o)}}startPollingLoop(){this.loopIsRunning=!0,this.currentLoopIndex++,requestAnimationFrame(t=>{this.runPollingLoop(this.currentLoopIndex,t)})}pausePollingLoop(){this.loopIsRunning=!1}getLastPollResults(){return this.lastReadInputDevices}updateInputDevices(t=Date.now()){const n=this.readAllInputDevices();return this.fireEvents(t,n),this.lastReadInputDevices=n,n}updateGamepadDeadZoneSettings(t){this.gamepadDeadZoneSettings=t}}const y=new ce({listenToMouseMovement:!0}),L=window.document.getElementById("device-names");y.addEventListener(d.CurrentInputsChanged,e=>{console.info("input changed:",e.detail.inputs)});y.addEventListener(d.DevicesRemoved,e=>{console.info("devices removed:",e.detail.inputs),e.detail.inputs.forEach(t=>{L.innerHTML=L.innerHTML.replace(String(t.deviceName)+"<br>","")})});y.addEventListener(d.NewDevicesAdded,e=>{console.info("new devices:",e.detail.inputs),e.detail.inputs.forEach(t=>{L.innerHTML+=String(t.deviceName)+"<br>"})});console.info({instance:y});
