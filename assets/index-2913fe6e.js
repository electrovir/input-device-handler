(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function n(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=n(s);fetch(s.href,i)}})();var l=(e=>(e.NewDevicesAdded="new-devices-added",e.AllDevicesUpdated="all-devices-updated",e.CurrentInputsChanged="current-inputs-updated",e.DevicesRemoved="devices-removed",e))(l||{}),V=globalThis&&globalThis.__setFunctionName||function(e,t,n){return typeof t=="symbol"&&(t=t.description?"[".concat(t.description,"]"):""),Object.defineProperty(e,"name",{configurable:!0,value:n?"".concat(n," ",t):t})};function F(){return class extends Event{constructor(t,n){super(t,n),this.detail=n.detail}}}const S=globalThis.CustomEvent||F();function q(){function e(t){var n;return n=class extends S{constructor(s){super(t,s)}},V(n,"TypedEventConstructor"),n.type=t,n}return e}globalThis&&globalThis.__setFunctionName;function g(e){return!!e}const B={capitalizeFirstLetter:!1};function J(e){return e.length?e[0].toUpperCase()+e.slice(1):""}function _(e,t){return t.capitalizeFirstLetter?J(e):e}function U(e,t=B){const n=e.toLowerCase();if(!n.length)return"";const r=n.replace(/^-+/,"").replace(/-{2,}/g,"-").replace(/-(?:.|$)/g,s=>{const i=s[1];return i?i.toUpperCase():""});return _(r,t)}var L;(function(e){e.Upper="upper",e.Lower="lower"})(L||(L={}));var T;(function(e){e.FirstThenWait="first-then-wait",e.AfterWait="after-wait"})(T||(T={}));const $=[(e,t)=>t in e,(e,t)=>t in e.constructor.prototype];function f(e,t){return e?$.some(n=>{try{return n(e,t)}catch{return!1}}):!1}function W(e){return e?e instanceof Error?e.message:f(e,"message")?String(e.message):String(e):""}function H(e){return e instanceof Error?e:new Error(W(e))}function X(e){return Array.isArray(e)?"array":typeof e}function G(e,t){return X(e)===t}function E(e){return!!e&&typeof e=="object"}function m(e){let t;try{t=Reflect.ownKeys(e)}catch{}return t??[...Object.keys(e),...Object.getOwnPropertySymbols(e)]}function v(e){return m(e).map(t=>e[t])}function Y(e){return Object.fromEntries(e)}function C({source:e,whitespace:t,errorHandler:n}){try{return JSON.stringify(e,void 0,t)}catch(r){if(n)return n(r);throw r}}const K="Failed to compare objects using JSON.stringify";function x(e,t,n){return C({source:e,errorHandler(r){if(n)return"";throw r}})===C({source:t,errorHandler(r){if(n)return"";throw r}})}function R(e,t,n={}){try{return e===t?!0:E(e)&&E(t)?x(Object.keys(e).sort(),Object.keys(t).sort(),!!(n!=null&&n.ignoreNonSerializableProperties))?Object.keys(e).every(s=>R(e[s],t[s])):!1:x(e,t,!!(n!=null&&n.ignoreNonSerializableProperties))}catch(r){const s=H(r);throw s.message.startsWith(K)||(s.message=`${K}: ${s.message}`),s}}function Q(e,t){let n=!1;const r=m(e).reduce((s,i)=>{const o=t(i,e[i],e);return o instanceof Promise&&(n=!0),{...s,[i]:o}},{});return n?new Promise(async(s,i)=>{try{await Promise.all(m(r).map(async o=>{const a=await r[o];r[o]=a})),s(r)}catch(o){i(o)}}):r}class ee{constructor(){this.listeners={}}getListenerCount(){return v(this.listeners).map(n=>(n==null?void 0:n.size)||0).reduce((n,r)=>n+r,0)}listen(t,n,r={}){const s=this.listeners,i=G(t,"string")?t:t.type;function o(){var c;return((c=s[i])==null?void 0:c.delete(a))||!1}function a(c,z){r.once&&o(),n(c,z)}return s[i]||(s[i]=new Set),s[i].add(a),o}dispatchEvent(t){const n=this.listeners[t.type],r=(n==null?void 0:n.size)||0;return n==null||n.forEach(s=>{s(t,()=>n.delete(s))}),r}removeListeners(){const n=v(this.listeners).reduce((r,s)=>{const i=(s==null?void 0:s.size)||0;return s==null||s.clear(),r+i},0);return this.listeners={},n}}var u=(e=>(e.Keyboard="keyboard",e.Mouse="mouse",e.Gamepad="gamepad",e))(u||{});const Z={gamepad1:0,gamepad2:1,gamepad3:2,gamepad4:3};function j(e){return Object.values(Z).includes(e)}const te={mouse:"mouse",keyboard:"keyboard"},d={...te,...Z};u.Gamepad,u.Gamepad,u.Gamepad,u.Gamepad,u.Keyboard,u.Mouse;const ne=.01;function re({value:e,gamepadDeadZone:t,globalDeadZone:n}){const r=t??(n||ne);return Math.abs(e)>r?e:0}var N=(e=>(e.Button="button",e.Axe="axe",e))(N||{});function p(e){return`button-${e}`}function D(e){return`axe-${e}`}function M({gamepadInput:e,inputIndex:t,deadZones:n,globalDeadZone:r}){const s=G(e,"number"),i=s?D(t):p(t),o=s?e:e.value;return{inputName:i,value:re({value:o,gamepadDeadZone:n[i],globalDeadZone:r}),inputType:s?N.Axe:N.Button}}function se({gamepad:e,deadZoneSettings:t,globalDeadZone:n}){if(!j(e.index))throw new Error(`Tried to serialize gamepad with out-of-bounds index: '${e.index}'`);const r=t[e.id]||{},s=e.axes.map((a,c)=>M({gamepadInput:a,inputIndex:c,deadZones:r,globalDeadZone:n})),i=e.buttons.map((a,c)=>M({deadZones:r,gamepadInput:a,globalDeadZone:n,inputIndex:c})),o=Y([...i,...s].map(a=>[a.inputName,a]));return{axes:s,buttons:i,isConnected:e.connected,gamepadName:e.id,index:e.index,mapping:e.mapping,serialized:!0,timestamp:e.timestamp,inputsByName:o}}const y=window.navigator;function ie({deadZoneSettings:e,globalDeadZone:t}){return Array.from(f(y,"webkitGetGamepads")?y.webkitGetGamepads():f(y,"getGamepads")?y.getGamepads():[]).filter(n=>!!n).map(n=>se({gamepad:n,deadZoneSettings:e,globalDeadZone:t}))}function oe({deadZoneSettings:e,globalDeadZone:t}){return ie({deadZoneSettings:e,globalDeadZone:t}).reduce((s,i)=>{const o=i.index;return j(o)?(s[o]=i,s):(console.warn(`ignoring gamepad index '${o}'`),s)},{})}function ae(e){const t={},n={deviceKey:e.index,deviceName:e.gamepadName,deviceType:u.Gamepad};return Object.values(e.inputsByName).forEach(r=>{r.value&&(t[r.inputName]={...n,details:r,inputName:r.inputName,inputValue:r.value})}),t}function ue(e){return Q(e,(t,n)=>({currentInputs:ae(n),deviceDetails:n,deviceName:n.gamepadName,deviceKey:n.index,deviceType:u.Gamepad}))}function A(e){return v(e).map(r=>r==null?void 0:r.currentInputs).filter(g).map(r=>v(r)).flat()}const P={deviceDetails:void 0,deviceKey:d.keyboard,deviceName:"keyboard",deviceType:u.Keyboard},h={deviceDetails:void 0,deviceKey:d.mouse,deviceName:"mouse",deviceType:u.Mouse};function b(){return(e,t)=>{var n;const r=U(e,{capitalizeFirstLetter:!0}),s=(n=class extends q()(e){constructor(){super(...arguments),this.eventType=e}static constructIfDataIsNew(i,...o){const a=s.getNewData(...o);if(a)return new s({detail:{timestamp:i,inputs:a}})}},n.getNewData=t,n);return Object.defineProperty(s,"name",{value:r,writable:!0}),s}}function ce(...[e,t]){return t}const de=b()(l.AllDevicesUpdated,ce);function O(e,t){return e.deviceKey===t.deviceKey&&e.inputName===t.inputName&&e.inputName===t.inputName&&e.inputValue===t.inputValue}function le(...[e,t]){const n=A(t),r=e?A(e):[];if(!R(r,n)){const s=n.filter(o=>!r.find(a=>O(a,o))),i=r.filter(o=>!n.find(a=>O(a,o)));return{newInputs:s,removedInputs:i,allCurrentInputs:n}}}const pe=b()(l.CurrentInputsChanged,le);function fe(...[e,t]){if(!e)return[];const n=m(e).filter(r=>!f(t,r));if(n.length)return n.map(r=>e[r]).filter(g)}const me=b()(l.DevicesRemoved,fe);function ve(...[e,t]){if(!e)return v(t).filter(g);const n=m(t).filter(r=>!f(e,r));if(n.length)return n.map(r=>t[r]).filter(g)}const ye=b()(l.NewDevicesAdded,ve),k=[de,ye,me,pe];Object.fromEntries(k.map(e=>[e.type,e]));class he extends ee{constructor(t={}){super(),this.currentKeyboardInputs={},this.currentMouseInputs={},this.gamepadDeadZoneSettings={},this.loopIsRunning=!1,this.globalDeadZone=0,this.currentLoopIndex=-1,this.lastEventDetails={},t.gamepadDeadZoneSettings&&this.updateGamepadDeadZoneSettings(t.gamepadDeadZoneSettings),t.globalDeadZone&&(this.globalDeadZone=t.globalDeadZone),this.attachWindowListeners(t),this.readAllDevices(),t.startLoopImmediately&&this.startPollingLoop()}attachWindowListeners(t){window.addEventListener("keydown",n=>{const r=p(n.key);if(this.currentKeyboardInputs.hasOwnProperty(r))return;const s={deviceType:u.Keyboard,details:{keyboardEvent:n},deviceKey:d.keyboard,deviceName:P.deviceName,inputName:r,inputValue:1};this.currentKeyboardInputs[r]=s}),window.addEventListener("keyup",n=>{delete this.currentKeyboardInputs[p(n.key)]}),window.addEventListener("mousedown",n=>{const r=p(n.button);this.currentMouseInputs.hasOwnProperty(r)||(this.currentMouseInputs[r]={deviceType:u.Mouse,details:{mouseEvent:n},deviceName:h.deviceName,deviceKey:d.mouse,inputName:r,inputValue:1})}),window.addEventListener("mouseup",n=>{delete this.currentMouseInputs[p(n.button)]}),t.disableMouseMovement||window.addEventListener("mousemove",n=>{const r=D("x"),s=D("y");this.currentMouseInputs[r]={deviceType:u.Mouse,details:{mouseEvent:n},deviceName:h.deviceName,deviceKey:d.mouse,inputName:r,inputValue:n.clientX},this.currentMouseInputs[s]={deviceType:u.Mouse,details:{mouseEvent:n},deviceName:h.deviceName,deviceKey:d.mouse,inputName:s,inputValue:n.clientY}})}runPollingLoop(t,n){this.loopIsRunning&&this.currentLoopIndex===t&&(this.readAllDevices(this.gamepadDeadZoneSettings,n),requestAnimationFrame(r=>{this.runPollingLoop(t,r)}))}fireEvents(t,n,r){k.forEach(s=>{const i=s.constructIfDataIsNew(t,n,r);i&&(this.lastEventDetails[i.type]={constructor:s,constructorInputs:[t,n,r]},this.dispatchEvent(i))})}getCurrentDeviceValues(t,n){const r=oe({deadZoneSettings:t,globalDeadZone:n}),s=ue(r);return{[d.keyboard]:{...P,currentInputs:{...this.currentKeyboardInputs}},[d.mouse]:{...h,currentInputs:{...this.currentMouseInputs}},...s}}startPollingLoop(){this.loopIsRunning||(this.loopIsRunning=!0,this.currentLoopIndex++,requestAnimationFrame(t=>{this.runPollingLoop(this.currentLoopIndex,t)}))}pausePollingLoop(){this.loopIsRunning&&(this.loopIsRunning=!1)}getLastPollResults(){return this.lastReadInputDevices}readAllDevices(t=this.gamepadDeadZoneSettings,n=performance.now(),r=this.globalDeadZone){const s=this.getCurrentDeviceValues(t,r),i=this.lastReadInputDevices;return this.lastReadInputDevices=s,this.fireEvents(n,i,s),s}updateGamepadDeadZoneSettings(t){this.gamepadDeadZoneSettings=t}}const w=new he({startLoopImmediately:!0}),I=window.document.getElementById("device-names");w.listen(l.CurrentInputsChanged,e=>{console.info("input changed:",e.detail.inputs)});w.listen(l.DevicesRemoved,e=>{console.info("devices removed:",e.detail.inputs),e.detail.inputs.forEach(t=>{I.innerHTML=I.innerHTML.replace(String(t.deviceName)+"<br>","")})});w.listen(l.NewDevicesAdded,e=>{console.info("new devices:",e.detail.inputs),e.detail.inputs.forEach(t=>{I.innerHTML+=String(t.deviceName)+"<br>"})});console.info({instance:w});
