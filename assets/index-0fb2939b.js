(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function n(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=n(s);fetch(s.href,i)}})();var d=(e=>(e.NewDevicesAdded="new-devices-added",e.AllDevicesUpdated="all-devices-updated",e.CurrentInputsChanged="current-inputs-updated",e.DevicesRemoved="devices-removed",e))(d||{}),S=globalThis&&globalThis.__setFunctionName||function(e,t,n){return typeof t=="symbol"&&(t=t.description?"[".concat(t.description,"]"):""),Object.defineProperty(e,"name",{configurable:!0,value:n?"".concat(n," ",t):t})};function j(){return class extends Event{constructor(t,n){super(t,n),this.detail=n.detail}}}const z=globalThis.CustomEvent||j();function F(){return e=>{var t;return t=class extends z{constructor(r){super(e,r)}},S(t,"TypedEventConstructor"),t.type=e,t}}globalThis&&globalThis.__setFunctionName;function k(e,t){return e.filter((n,r)=>!t.includes(r))}function h(e){return!!e}const q={capitalizeFirstLetter:!1};function _(e){return e.length?e[0].toUpperCase()+e.slice(1):""}function J(e,t){return t.capitalizeFirstLetter?_(e):e}function Z(e,t=q){const n=e.toLowerCase();if(!n.length)return"";const r=n.replace(/^-+/,"").replace(/-{2,}/g,"-").replace(/-(?:.|$)/g,s=>{const i=s[1];return i?i.toUpperCase():""});return J(r,t)}var N;(function(e){e.Upper="upper",e.Lower="lower"})(N||(N={}));const $=[(e,t)=>t in e,(e,t)=>t in e.constructor.prototype];function p(e,t){return e?$.some(n=>{try{return n(e,t)}catch{return!1}}):!1}function H(e){return e?e instanceof Error?e.message:p(e,"message")?String(e.message):String(e):""}function U(e){return e instanceof Error?e:new Error(H(e))}function D(e){return!!e&&typeof e=="object"}function f(e){let t;try{t=Reflect.ownKeys(e)}catch{}return t??[...Object.keys(e),...Object.getOwnPropertySymbols(e)]}function b(e){return f(e).map(t=>e[t])}function C({source:e,whitespace:t,errorHandler:n}){try{return JSON.stringify(e,void 0,t)}catch(r){if(n)return n(r);throw r}}const x="Failed to compare objects using JSON.stringify";function K(e,t,n){return C({source:e,errorHandler(r){if(n)return"";throw r}})===C({source:t,errorHandler(r){if(n)return"";throw r}})}function O(e,t,n={}){try{return e===t?!0:D(e)&&D(t)?K(Object.keys(e).sort(),Object.keys(t).sort(),!!(n!=null&&n.ignoreNonSerializableProperties))?Object.keys(e).every(s=>O(e[s],t[s])):!1:K(e,t,!!(n!=null&&n.ignoreNonSerializableProperties))}catch(r){const s=U(r);throw s.message.startsWith(x)||(s.message=`${x}: ${s.message}`),s}}function B(e,t){let n=!1;const r=f(e).reduce((s,i)=>{const o=t(i,e[i],e);return o instanceof Promise&&(n=!0),{...s,[i]:o}},{});return n?new Promise(async(s,i)=>{try{await Promise.all(f(r).map(async o=>{const u=await r[o];r[o]=u})),s(r)}catch(o){i(o)}}):r}class W extends EventTarget{constructor(){super(...arguments),this.setupListeners=[]}getListenerCount(){return this.setupListeners.length}addEventListener(t,n,r){super.addEventListener(t,n,r),n&&this.setupListeners.push({type:t,callback:n,options:r})}dispatchEvent(t){return super.dispatchEvent(t)}removeEventListener(t,n,r){super.removeEventListener(t,n,r);const s=this.setupListeners.findIndex(i=>{if(i.type!==t)return!1;if(typeof r<"u"||typeof i.options<"u"){if(typeof r!=typeof i.options||typeof i.options=="boolean"&&typeof r=="boolean"&&r!==i.options)return!1;if(typeof i.options=="object"&&typeof r=="object"&&r.capture!==i.options.capture)return!1}return i.callback===n});this.setupListeners=k(this.setupListeners,[s])}removeAllEventListeners(){this.setupListeners.forEach(t=>{super.removeEventListener(t.type,t.callback,t.options)}),this.setupListeners=[]}}var a=(e=>(e.Keyboard="keyboard",e.Mouse="mouse",e.Gamepad="gamepad",e))(a||{});const G={gamepad1:0,gamepad2:1,gamepad3:2,gamepad4:3};function V(e){return Object.values(G).includes(e)}const X={mouse:"mouse",keyboard:"keyboard"},c={...X,...G};a.Gamepad,a.Gamepad,a.Gamepad,a.Gamepad,a.Keyboard,a.Mouse;var L=(e=>(e.Button="button",e.Axe="axe",e))(L||{});function l(e){return`button-${e}`}function y(e){return`axe-${e}`}function Y(e){return{pressed:e.pressed,touched:e.touched,value:e.value}}function Q(e){if(!V(e.index))throw new Error(`Tried to serialize gamepad with out-of-bounds index: '${e.index}'`);return{axes:e.axes,buttons:e.buttons.map(Y),connected:e.connected,id:e.id,index:e.index,mapping:e.mapping,serialized:!0,timestamp:e.timestamp}}const v=window.navigator;function ee(){return Array.from(p(v,"webkitGetGamepads")?v.webkitGetGamepads():p(v,"getGamepads")?v.getGamepads():[]).filter(e=>!!e).map(e=>Q(e))}function te(e){return ee().reduce((r,s)=>{const i=re(s,e),o=s.index;return V(o)?(r[o]={...s,...i},r):(console.warn(`ignoring gamepad index '${o}'`),r)},{})}function ne(e){const t={},n={deviceKey:e.index,deviceName:e.id,deviceType:a.Gamepad};return e.buttons.forEach((r,s)=>{if(r.value){const i=l(s);t[i]={...n,details:{inputType:L.Button,buttonDetails:r},inputName:i,inputValue:r.value}}}),e.axes.forEach((r,s)=>{if(r){const i=y(s);t[i]={...n,details:{inputType:L.Axe},inputName:i,inputValue:r}}}),t}const T=.01;function re(e,t){const n=t[e.id],r=e.axes.map((i,o)=>{const u=(n==null?void 0:n[y(o)])??T;return Math.abs(i)<u?0:i}),s=e.buttons.map((i,o)=>{const u=(n==null?void 0:n[l(o)])??T,E=Math.abs(i.value)<u?0:i.value;return{...i,value:E}});return{axes:r,buttons:s}}function se(e){return B(e,(t,n)=>({currentInputs:ne(n),deviceDetails:n,deviceName:n.id,deviceKey:n.index,deviceType:a.Gamepad}))}function M(e){return b(e).map(r=>r==null?void 0:r.currentInputs).filter(h).map(r=>b(r)).flat()}const P={deviceDetails:void 0,deviceKey:c.keyboard,deviceName:"keyboard",deviceType:a.Keyboard},m={deviceDetails:void 0,deviceKey:c.mouse,deviceName:"mouse",deviceType:a.Mouse};function g(){return(e,t)=>{var n;const r=Z(e,{capitalizeFirstLetter:!0}),s=(n=class extends F()(e){constructor(){super(...arguments),this.eventType=e}static constructIfDataIsNew(i,...o){const u=s.getNewData(...o);if(u)return new s({detail:{timestamp:i,inputs:u}})}},n.getNewData=t,n);return Object.defineProperty(s,"name",{value:r,writable:!0}),s}}function ie(...[e,t]){return t}const oe=g()(d.AllDevicesUpdated,ie);function A(e,t){return e.deviceKey===t.deviceKey&&e.inputName===t.inputName&&e.inputName===t.inputName&&e.inputValue===t.inputValue}function ae(...[e,t]){const n=M(t),r=e?M(e):[];if(!O(r,n)){const s=n.filter(o=>!r.find(u=>A(u,o))),i=r.filter(o=>!n.find(u=>A(u,o)));return{newInputs:s,removedInputs:i,allCurrentInputs:n}}}const ue=g()(d.CurrentInputsChanged,ae);function ce(...[e,t]){if(!e)return[];const n=f(e).filter(r=>!p(t,r));if(n.length)return n.map(r=>e[r]).filter(h)}const de=g()(d.DevicesRemoved,ce);function le(...[e,t]){if(!e)return b(t).filter(h);const n=f(t).filter(r=>!p(e,r));if(n.length)return n.map(r=>t[r]).filter(h)}const pe=g()(d.NewDevicesAdded,le),R=[oe,pe,de,ue];Object.fromEntries(R.map(e=>[e.type,e]));class fe extends W{constructor(t={}){super(),this.currentKeyboardInputs={},this.currentMouseInputs={},this.gamepadDeadZoneSettings={},this.loopIsRunning=!1,this.currentLoopIndex=-1,this.lastEventDetails={},t.gamepadDeadZoneSettings&&this.updateGamepadDeadZoneSettings(t.gamepadDeadZoneSettings),this.attachWindowListeners(t),this.readAllDevices(),t.startLoopImmediately&&this.startPollingLoop()}attachWindowListeners(t){window.addEventListener("keydown",n=>{const r=l(n.key);if(this.currentKeyboardInputs.hasOwnProperty(r))return;const s={deviceType:a.Keyboard,details:{keyboardEvent:n},deviceKey:c.keyboard,deviceName:P.deviceName,inputName:r,inputValue:1};this.currentKeyboardInputs[r]=s}),window.addEventListener("keyup",n=>{delete this.currentKeyboardInputs[l(n.key)]}),window.addEventListener("mousedown",n=>{const r=l(n.button);this.currentMouseInputs.hasOwnProperty(r)||(this.currentMouseInputs[r]={deviceType:a.Mouse,details:{mouseEvent:n},deviceName:m.deviceName,deviceKey:c.mouse,inputName:r,inputValue:1})}),window.addEventListener("mouseup",n=>{delete this.currentMouseInputs[l(n.button)]}),t.disableMouseMovement||window.addEventListener("mousemove",n=>{const r=y("x"),s=y("y");this.currentMouseInputs[r]={deviceType:a.Mouse,details:{mouseEvent:n},deviceName:m.deviceName,deviceKey:c.mouse,inputName:r,inputValue:n.clientX},this.currentMouseInputs[s]={deviceType:a.Mouse,details:{mouseEvent:n},deviceName:m.deviceName,deviceKey:c.mouse,inputName:s,inputValue:n.clientY}})}runPollingLoop(t,n){this.loopIsRunning&&this.currentLoopIndex===t&&(this.readAllDevices(this.gamepadDeadZoneSettings,n),requestAnimationFrame(r=>{this.runPollingLoop(t,r)}))}fireEvents(t,n){R.forEach(r=>{const s=r.constructIfDataIsNew(t,this.lastReadInputDevices,n);s&&(this.lastEventDetails[s.type]={constructor:r,constructorInputs:[t,this.lastReadInputDevices,n]},this.dispatchEvent(s))})}getCurrentDeviceValues(t){const n=te(t),r=se(n);return{[c.keyboard]:{...P,currentInputs:{...this.currentKeyboardInputs}},[c.mouse]:{...m,currentInputs:{...this.currentMouseInputs}},...r}}addEventListenerAndFireWithLatest(t,n,r){if(this.addEventListener(t,n,r),!n)return;const s=this.lastEventDetails[t],i=typeof n=="function"?n:n.handleEvent;if(s){const o=s.constructor.constructIfDataIsNew(...s.constructorInputs);if(!o)throw new Error(`Got input device event constructor args for event type '${t}' but the constructor did not produce an event.`);i(o)}}startPollingLoop(){this.loopIsRunning||(this.loopIsRunning=!0,this.currentLoopIndex++,requestAnimationFrame(t=>{this.runPollingLoop(this.currentLoopIndex,t)}))}pausePollingLoop(){this.loopIsRunning&&(this.loopIsRunning=!1)}getLastPollResults(){return this.lastReadInputDevices}readAllDevices(t=this.gamepadDeadZoneSettings,n=performance.now()){const r=this.getCurrentDeviceValues(t);return this.fireEvents(n,r),this.lastReadInputDevices=r,r}updateGamepadDeadZoneSettings(t){this.gamepadDeadZoneSettings=t}}const w=new fe,I=window.document.getElementById("device-names");w.addEventListener(d.CurrentInputsChanged,e=>{console.info("input changed:",e.detail.inputs)});w.addEventListener(d.DevicesRemoved,e=>{console.info("devices removed:",e.detail.inputs),e.detail.inputs.forEach(t=>{I.innerHTML=I.innerHTML.replace(String(t.deviceName)+"<br>","")})});w.addEventListener(d.NewDevicesAdded,e=>{console.info("new devices:",e.detail.inputs),e.detail.inputs.forEach(t=>{I.innerHTML+=String(t.deviceName)+"<br>"})});console.info({instance:w});
