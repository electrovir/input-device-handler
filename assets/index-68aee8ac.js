(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function n(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=n(s);fetch(s.href,i)}})();var d=(e=>(e.NewDevicesAdded="new-devices-added",e.AllDevicesUpdated="all-devices-updated",e.CurrentInputsChanged="current-inputs-updated",e.DevicesRemoved="devices-removed",e))(d||{}),O=globalThis&&globalThis.__setFunctionName||function(e,t,n){return typeof t=="symbol"&&(t=t.description?"[".concat(t.description,"]"):""),Object.defineProperty(e,"name",{configurable:!0,value:n?"".concat(n," ",t):t})};function R(){return e=>{var t;return t=class extends CustomEvent{constructor(r){super(e,r)}},O(t,"TypedEventConstructor"),t.type=e,t}}globalThis&&globalThis.__setFunctionName;class V extends EventTarget{addEventListener(t,n,r){return super.addEventListener(t,n,r)}dispatchEvent(t){return super.dispatchEvent(t)}removeEventListener(t,n,r){return super.removeEventListener(t,n,r)}}function S(e){return e?e instanceof Error?e.message:f(e,"message")?String(e.message):String(e):""}function j(e){return e instanceof Error?e:new Error(S(e))}function M(e){return!!e}function D(e){return!!e&&typeof e=="object"}const G=[(e,t)=>t in e,(e,t)=>t in e.constructor.prototype];function f(e,t){return e?G.some(n=>{try{return n(e,t)}catch{return!1}}):!1}function p(e){let t;try{t=Reflect.ownKeys(e)}catch{}return t??[...Object.keys(e),...Object.getOwnPropertySymbols(e)]}function y(e){return p(e).map(t=>e[t])}function I({source:e,whitespace:t,errorHandler:n}){try{return JSON.stringify(e,void 0,t)}catch(r){if(n)return n(r);throw r}}const N="Failed to compare objects using JSON.stringify";function E(e,t,n){return I({source:e,errorHandler(r){if(n)return"";throw r}})===I({source:t,errorHandler(r){if(n)return"";throw r}})}function K(e,t,n={}){try{return e===t?!0:D(e)&&D(t)?E(Object.keys(e).sort(),Object.keys(t).sort(),!!(n!=null&&n.ignoreNonSerializableProperties))?Object.keys(e).every(s=>K(e[s],t[s])):!1:E(e,t,!!(n!=null&&n.ignoreNonSerializableProperties))}catch(r){const s=j(r);throw s.message.startsWith(N)||(s.message=`${N}: ${s.message}`),s}}function Z(e,t){let n=!1;const r=p(e).reduce((s,i)=>{const a=t(i,e[i],e);return a instanceof Promise&&(n=!0),{...s,[i]:a}},{});return n?new Promise(async(s,i)=>{try{await Promise.all(p(r).map(async a=>{const o=await r[a];r[a]=o})),s(r)}catch(a){i(a)}}):r}const T={gamepad1:0,gamepad2:1,gamepad3:2,gamepad4:3};function k(e){return Object.values(T).includes(e)}const F={mouse:"mouse",keyboard:"keyboard"},c={...F,...T};var u=(e=>(e.Keyboard="keyboard",e.Mouse="mouse",e.Gamepad="gamepad",e))(u||{}),g=(e=>(e.Button="button",e.Axe="axe",e))(g||{});function l(e){return`button-${e}`}function b(e){return`axe-${e}`}function q(e){return{pressed:e.pressed,touched:e.touched,value:e.value}}function z(e){if(!k(e.index))throw new Error(`Tried to serialize gamepad with out-of-bounds index: '${e.index}'`);return{axes:e.axes,buttons:e.buttons.map(q),connected:e.connected,id:e.id,index:e.index,mapping:e.mapping,serialized:!0,timestamp:e.timestamp}}function J(){return window.navigator}function _(e){const t=J();return Array.from(f(t,"webkitGetGamepads")?t.webkitGetGamepads():t.getGamepads()).filter(s=>!!s).map(s=>z(s)).reduce((s,i)=>{const a=$(i,e),o=i.index;return k(o)?(s[o]={...i,...a},s):(console.warn(`ignoring gamepad index '${o}'`),s)},{})}function B(e){const t={},n={deviceKey:e.index,deviceName:e.id,deviceType:u.Gamepad};return e.buttons.forEach((r,s)=>{if(r.value){const i=l(s);t[i]={...n,details:{inputType:g.Button,buttonDetails:r},inputName:i,inputValue:r.value}}}),e.axes.forEach((r,s)=>{if(r){const i=b(s);t[i]={...n,details:{inputType:g.Axe},inputName:i,inputValue:r}}}),t}const L=.01;function $(e,t){const n=t[e.id],r=e.axes.map((i,a)=>{const o=(n==null?void 0:n.axesDeadZones[a])??L;return Math.abs(i)<o?0:i}),s=e.buttons.map((i,a)=>{const o=(n==null?void 0:n.axesDeadZones[a])??L,A=Math.abs(i.value)<o?0:i.value;return{...i,value:A}});return{axes:r,buttons:s}}function H(e){return Z(e,(t,n)=>({currentInputs:B(n),deviceDetails:n,deviceName:n.id,deviceKey:n.index,deviceType:u.Gamepad}))}function x(e){return y(e).map(r=>r.currentInputs).map(r=>y(r)).flat()}const C={deviceDetails:void 0,deviceKey:c.keyboard,deviceName:"keyboard",deviceType:u.Keyboard},v={deviceDetails:void 0,deviceKey:c.mouse,deviceName:"mouse",deviceType:u.Mouse};function m(){return(e,t)=>{var n;const r=(n=class extends R()(e){static constructIfDataDataCheckPasses(s,...i){const a=r.dataCheckCallback(...i);if(a)return new r({detail:{timestamp:s,data:a}})}},n.dataCheckCallback=t,n);return r}}function U(...[e,t]){return t}class W extends m()(d.AllDevicesUpdated,U){}function X(...[e,t]){const n=x(t),r=e?x(e):[];if(!K(r,n)){const s=n.filter(a=>!r.find(o=>{o.inputName,a.inputName})),i=r.filter(a=>!n.find(o=>{o.inputName,a.inputName}));return{newInputs:s,removedInputs:i,allCurrentInputs:n}}}class Y extends m()(d.CurrentInputsChanged,X){}function Q(...[e,t]){if(!e)return[];const n=p(e).filter(r=>!f(t,r));if(n.length)return n.map(r=>e[r]).filter(M)}class ee extends m()(d.DevicesRemoved,Q){}function te(...[e,t]){if(!e)return y(t);const n=p(t).filter(r=>!f(e,r));if(n.length)return n.map(r=>t[r]).filter(M)}class ne extends m()(d.NewDevicesAdded,te){}const P=[W,ne,ee,Y];P.reduce((e,t)=>(e[t.type]=t,e),{});class re extends V{constructor(t={}){super(),this.currentKeyboardInputs={},this.currentMouseInputs={},this.gamepadDeadZoneSettings={},this.loopIsRunning=!1,this.currentLoopIndex=-1,t.skipLoopStart||this.startPollingLoop(),t.gamepadDeadZoneSettings&&this.updateGamepadDeadZoneSettings(t.gamepadDeadZoneSettings),this.attachWindowListeners(t)}attachWindowListeners(t){window.addEventListener("keydown",n=>{const r=l(n.key);if(this.currentKeyboardInputs.hasOwnProperty(r))return;const s={deviceType:u.Keyboard,details:{keyboardEvent:n},deviceKey:c.keyboard,deviceName:C.deviceName,inputName:r,inputValue:1};this.currentKeyboardInputs[r]=s}),window.addEventListener("keyup",n=>{delete this.currentKeyboardInputs[l(n.key)]}),window.addEventListener("mousedown",n=>{const r=l(n.button);this.currentMouseInputs.hasOwnProperty(r)||(this.currentMouseInputs[r]={deviceType:u.Mouse,details:{mouseEvent:n},deviceName:v.deviceName,deviceKey:c.mouse,inputName:r,inputValue:1})}),window.addEventListener("mouseup",n=>{delete this.currentMouseInputs[l(n.button)]}),t.listenToMouseMovement&&window.addEventListener("mousemove",n=>{const r=b("x"),s=b("y");this.currentMouseInputs[r]={deviceType:u.Mouse,details:{mouseEvent:n},deviceName:v.deviceName,deviceKey:c.mouse,inputName:r,inputValue:n.clientX},this.currentMouseInputs[s]={deviceType:u.Mouse,details:{mouseEvent:n},deviceName:v.deviceName,deviceKey:c.mouse,inputName:s,inputValue:n.clientY}})}runPollingLoop(t,n){this.loopIsRunning&&this.currentLoopIndex===t&&(this.updateInputDevices(n),requestAnimationFrame(r=>{this.runPollingLoop(t,r)}))}fireEvents(t,n){P.forEach(r=>{const s=r.constructIfDataDataCheckPasses(t,this.lastReadInputDevices,n);s&&this.dispatchEvent(s)})}readAllInputDevices(){const t=_(this.gamepadDeadZoneSettings),n=H(t);return{[c.keyboard]:{...C,currentInputs:{...this.currentKeyboardInputs}},[c.mouse]:{...v,currentInputs:{...this.currentMouseInputs}},...n}}addEventListenerAndFireRightAway(...t){this.addEventListener(...t)}startPollingLoop(){this.loopIsRunning=!0,this.currentLoopIndex++,requestAnimationFrame(t=>{this.runPollingLoop(this.currentLoopIndex,t)})}pausePollingLoop(){this.loopIsRunning=!1}getLastPollResults(){return this.lastReadInputDevices}updateInputDevices(t=Date.now()){const n=this.readAllInputDevices();return this.fireEvents(t,n),this.lastReadInputDevices=n,n}updateGamepadDeadZoneSettings(t){this.gamepadDeadZoneSettings=t}}const h=new re({listenToMouseMovement:!0}),w=window.document.getElementById("device-names");h.addEventListener(d.CurrentInputsChanged,e=>{console.info("input changed:",e.detail.data)});h.addEventListener(d.DevicesRemoved,e=>{console.info("devices removed:",e.detail.data),e.detail.data.forEach(t=>{w.innerHTML=w.innerHTML.replace(String(t.deviceName)+"<br>","")})});h.addEventListener(d.NewDevicesAdded,e=>{console.info("new devices:",e.detail.data),e.detail.data.forEach(t=>{w.innerHTML+=String(t.deviceName)+"<br>"})});console.info({instance:h});
